package net.vansen.chat;

import java.util.Base64;

/**
 * List by <a href="https://github.com/etylermoss/swears/blob/master/swears.txt">Etyler Moss</a>
 */
public class SwearList {
    public static String[] list;

    static {
        // noinspection all
        String swears = """
                
                """;
        list = new String(Base64.getDecoder().decode(swears.getBytes())).trim().split("\n");
    }
}